Πρωτη εργασια στην αριθμητική ανάλυση

(Δεν χρησιμοποιηθηκε γλωσσικο μοντελο σε κανενα απο τα αρχεια κωδικα που συμπεριλαμβανονται)

Υποσημειωση:Στον κωδικα εχουν σχολιαστει με # οι γραμμες που τυπωνουν αποτελεσματα,καθως τα αποτελεσματα περιγραφονται εδω (κατα την δικια μου κατανοηση,η εκφωνηση αυτο ζηταει).

Ασκηση 1

α) Ισχυει πως f(0) > 0,f(1) < 0,f(3) > 0,επομενως απο το θεωρημα Bolzano φαινεται πως υπαρχουν τουλαχιστον 2 ριζες,μια στο [0,1] και μια στο [1,3],αρα αναζητω με τη μεθοδο της διχοτομησης ριζες στα διαστηματα αυτα.Λογω της επιλογης διαστηματος αυτης,το προγραμμα βρισκει την ακεραια ριζα 2 σε 0 επαναληψεις και την 0.85714 σε 16 επαναληψεις.

β)Εδω πρεπει να σημειωθει(σχετικο και για την ασκηση 2),πως επιλεχθηκε να παρουσιαστουν και οι 2 τροποι παραγωγισης,καθως η εκφωνηση της εργασιας κανει αβεβαιο ποιος προτιμαται να χρησιμοποιηθει,καθως και αν υπαρχει προβλημα με τη χρηση ενσωματωμενης συναρτησης της python.Ειναι προφανες πως η exdiff(exact
derivative) ειναι καλυτερη απο πλευρας χρονικης πολυπλοκοτητας,καθως απαιτει ενα evaluation πολυωνυμου,ενω η numdiff(numerical derivative) απαιτει 2,ενω υπερτερει και απο πλευρας αριθμητικης ακριβειας.Παρολα αυτα,για πιο πολυπλοκες συναρτησεις των οποιων τις παραγωγους ειναι πιο δυσκολο να υπολογισει ανθρωπος
με το χερι,σιγουρα θα προτιμηθει η numdiff.
Παρατηρηθηκε κατα την αναπτυξη του προγραμματος και μετα απο πειραματισμο με initial guesses πως η μεθοδος newton πολυ δυσκολα θα συγκλινει στο 2 (προφανως λογω του οτι εχει μεγαλυτερη πολλαπλοτητα απο την αλλη ριζα,το οποιο ειναι γνωστο προβλημα της μεθοδου,αλλωστε ισχυει πως f'(2) = 0).Συγκεκριμενα,ακομα και για initial guesses 2.5 και 3,τα οποια ειναι πολυ πιο κοντα στο 2 απο οτι στο 0.85714,η μεθοδος παλι θα συγκλινει στο 0.85714,επειτα απο 270 και 139 επαναληψεις αντιστοιχα.Για initial guess 1 η μεθοδος δινει 0.85715 σε 107 μονο επαναληψεις.Τελος,πρεπει να σημειωθει οτι η υλοποιηση γινεται με αναδρομη.

γ)Η μεθοδος της τεμνουσας παλι υλοποειται με μια απλη αναδρομη.Παλι εχουμε πως για initial guesses 0,1 η μεθοδος συγκλινει στο 0.85714 σε 7 επαναληψεις,ενω
για 2.5,3 συγκλινει στο 2.01378 σε 14 (προφανως για να ικανοποιειται η |f(x1)| - error > 0 ισχυει πως f(2.01378) ~= 0)

Ασκηση 2

Στους κωδικες της ασκησης 2 χρησιμοποιηθηκε hand computed derivative για την πρωτη παραγωγο και numerical derivative για την δευτερη

α) Απο το θεμελιωδες θεωρημα της αλγεβρας,ως πολυωνυμο 6ου βαθμου η συναρτηση εχει το πολυ 6 πραγματικες ριζες.Επομενως,χωριζω την αναζητηση σε 6 ισα υποδιαστηματα μηκους (2-(-2))/6 = 4/6 = 2/3.Στην τροποποιημενη newton,ο κωδικας τρεχει 6 φορες για να βρει τις 5 πραγματικες ριζες (προφανως μια απο αυτες εχει μεγαλυτερη πολλαπλοτητα),παιρνοντας 4,3,0(για την -2/3),3 και 5 επαναληψεις.Δεδομενου οτι αντιστοιχη λογικη χρησιμοποιηθηκε στην προηγουμενη ασκηση για
την ευρεση των optimal guesses,φαινεται πως η τροποποιημενη newton τρεχει πιο γρηγορα απο την κανονικη,κανοντας φυσικα περισσοτερες αριθμητικες πραξεις λογω των επιπλεον παραγωγων

β) Για την τυχαιοτητα προτιμηθηκε η χρηση της ωρας του υπολογιστη ως καλυτερη γεννητρια ψευδοτυχαιων αριθμων,ενω για τις 20 επαναληψεις (το οποιο εγινε χειροκινητα,λογω περιορισμων της python στο ζητημα αυτο),προτιμηθηκε η random.random() για να γινει πιο σωστα η διαφοροποιηση στο αποτελεσμα.Οι επαναληψεις στις οποιες συνεκλινε κυμανθηκαν στο διαστημα [25,45] για ριζα στο [-2,-1].H συγκλιση προφανως και κυμαινεται απο παρομοια με της αρχικης μεθοδου διχοτομησης,σε τρομακτικα αργη,με επαναληψεις 39,233599,10,18,53,461463 (6 φορες για 5 ριζες,δεν μας ενδιαφερει ποια ειναι ποια)

γ)Η μεθοδος της τεμνουσας παρουσιαζει το προβλημα οτι η επιλογη υποδιαστηματων ισως να μην ειναι η καλυτερη δυνατη,διοτι υπαρχουν 3 initial guesses,το οποιο οδηγει σε 11(!) ευρεσεις ριζων,απο τις οποιες προφανως μονο οι 5 ειναι μοναδικες(επαναληψεις 5,17,0,6,7)

Να σημειωθει οτι η υλοποιηση με sets γινεται λογω του οτι και οι 3 υλοποιησεις καταληγουν να βρισκουν ριζες παραπανω απο 1 φορα,και ετσι πρεπει καπως να ταυτοποιηθουν ποιες ειναι οι μοναδικες.Επισης,οι α) και γ) εχουν γινει με αναδρομη,ενω η β) με απλο κωδικα (οι αναδρομικοι κωδικες χρειαζονται μια επιπλεον παραμετρο στις συναρτησεις για την προσμετρηση των επαναληψεων)

Οι ριζες ειναι οι εξης:
-0.66667
0.20518
0.5
1.17612
-1.3813

Αρκει ν.δ.ο.
1. 0<=G(i,j)<=1 
2.Σ(i=1...n) G(i,k) = 1 για καθε k με 1<=k<=n

Eχουμε οτι G(i,j) = q/n + A(j,i)*(1-q)/Nj (Nj το αθροισμα της j γραμμης του Α)
Eιναι 0<=q<=1 και n > 1,αρα 0<=q/n<=1 (3). 
Το Α(j,i) ειναι ή 0 ή 1.Αν ειναι 0,G(i,j) = q/n και αρα ισχυει το 1.Αν Α(j,i) = 1,μενει (1-q)/Nj.Σιγουρα Nj >=1 καθως το Α(i,j) ειναι ή 0 ή 1,και 0<=1-q<=1
Αρα 0<=(1-q)/Nj<=1(4)
Προσθετοντας τις (3) και (4),εχουμε οτι 0<=G(i,j)<=1 

2.Δοθηκε πως p(j->i) = G(i,j) (με απλη αντικατασταση των j και i στις σχεσεις).Γνωριζουμε πως σιγουρα πρεπει να μετακινηθει ο χρηστης σε καποιο i για καθε j(5),και η πιθανοτητα να 
μετακινηθει σε καποιο συγκεκριμενο i απο καποιο συγκεκριμενο j ειναι p(j->i),αρα Σ(i=1...n)p(j->i) = 1,αρα Σ(i=1...n)G(i,j) = 1,το οποιο λογω της (5) ισχυει για καθε j