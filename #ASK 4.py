import numpy as np
q = 0.15
n = 15

def makeG(A,q):
    for i in range(n):
        for j in range(n):
            if A[j][i] == 0:
                G[i][j] = 1/100 #q/n
            else:
                sum = 0
                for z in range(n):
                   sum+=A[j][z]
                G[i][j] = 1/100 + 0.85/sum
    return G
G = [[0]*n]*n
A = [[0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0],
    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0]]


print(makeG(A,q))
b = [1] * n
for i in range(15):
    b = np.dot(A,b)
    norm = np.linalg.norm(b)
    b = [i/norm for i in b]
print(b)

#Θα βελτιωσουμε τη σημαντικοτητα της πρωτης σελιδας
A[0] = [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0]
print(makeG(A,q))
#Η σημαντικοτητα της σχεδον διπλασιαστηκε

q = 0.02
print(makeG(A,q))
q = 0.6
print(makeG(A,q))
Α[7][10] = 3
Α[11][11] = 3